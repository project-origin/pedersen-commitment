name: Create Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # support v1.2.3
      - 'v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+' #supports release candidate versions v1.2.3-rc.4

jobs:

  define-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.output-version.outputs.version }}

    steps:
      - uses: actions/checkout@v3

      - name: Set env
        id: output-version
        run: echo "version=${GITHUB_REF#refs/*/v}" >> $GITHUB_OUTPUT

  publish-pedersen-nuget:
    name: Publish PedersenCommitment Nuget package
    needs:
      - define-version
    runs-on: ubuntu-20.04
    env:
      project: src/ProjectOrigin.PedersenCommitment

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET Core SDK 7
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.203"

      - name: Update apt-get
        run: |
          sudo apt-get update

      - name: Install windows cross-compile
        run: |
          sudo apt-get install gcc-mingw-w64 -y
          rustup target add x86_64-pc-windows-gnu

      - name: Install aarch64-linux cross-compile
        run: |
          sudo apt-get install gcc-aarch64-linux-gnu -y
          rustup target add aarch64-unknown-linux-gnu
          mkdir .cargo
          cat << EOF > .cargo/config.toml
          [target.aarch64-unknown-linux-gnu]
          linker = "aarch64-linux-gnu-gcc"
          EOF

      - name: BuildNativeDeps
        shell: bash
        working-directory: 'src/Native'
        run: |
          cargo build --release --target=x86_64-unknown-linux-gnu
          cargo build --release --target=aarch64-unknown-linux-gnu
          cargo build --release --target=x86_64-pc-windows-gnu

      - name: Build
        shell: bash
        run: dotnet build --configuration Release ${{ env.project }}

      - name: Pack
        shell: bash
        run: dotnet pack --output build --configuration Release --no-restore -p:Version=${{ needs.define-version.outputs.version }} ${{ env.project }}

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: nuget-packages
          path: build/*.nupkg
          retention-days: 1

      - name: Publish
        shell: bash
        run: dotnet nuget push build/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs:
      - publish-pedersen-nuget
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: "${{ contains( env.GITHUB_REF, '-rc.') }}"
          generate_release_notes: true
          files: artifacts/**
